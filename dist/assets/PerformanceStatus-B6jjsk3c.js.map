{"version":3,"file":"PerformanceStatus-B6jjsk3c.js","sources":["../../src/hooks/usePerformanceMonitor.js","../../src/components/PerformanceStatus.jsx"],"sourcesContent":["import { useEffect, useCallback, useRef } from 'react';\nimport { onCLS, onFID, onFCP, onLCP, onTTFB } from 'web-vitals';\n\n// Singleton pattern to prevent multiple listeners\nlet listenersRegistered = false;\nlet performanceCallbacks = new Set();\n\n// Register web-vitals listeners only once\nconst registerWebVitalsListeners = () => {\n  if (listenersRegistered) return;\n  \n  const reportWebVital = (metric) => {\n    // Call all registered callbacks\n    performanceCallbacks.forEach(callback => {\n      try {\n        callback(metric);\n      } catch (error) {\n        console.error('Error in performance callback:', error);\n      }\n    });\n  };\n\n  // Register listeners only once\n  onCLS(reportWebVital);\n  onFID(reportWebVital);\n  onFCP(reportWebVital);\n  onLCP(reportWebVital);\n  onTTFB(reportWebVital);\n  \n  listenersRegistered = true;\n  \n  if (import.meta.env.DEV) {\n    console.log('ðŸš€ Web Vitals listeners registered once');\n  }\n};\n\nexport const usePerformanceMonitor = (onPerfEntry) => {\n  const callbackRef = useRef(onPerfEntry);\n  const registeredRef = useRef(false);\n\n  // Update callback ref when it changes\n  useEffect(() => {\n    callbackRef.current = onPerfEntry;\n  }, [onPerfEntry]);\n\n  // Create a stable callback function\n  const stableCallback = useCallback((metric) => {\n    if (callbackRef.current && typeof callbackRef.current === 'function') {\n      callbackRef.current(metric);\n    }\n    \n    // Log to console in development (only once per metric)\n    if (import.meta.env.DEV) {\n      console.log(`${metric.name}: ${metric.value}${metric.rating ? ` (${metric.rating})` : ''}`);\n    }\n  }, []);\n\n  useEffect(() => {\n    // Prevent registering the same callback multiple times\n    if (registeredRef.current) return;\n    \n    // Add callback to the set\n    performanceCallbacks.add(stableCallback);\n    registeredRef.current = true;\n    \n    // Register web-vitals listeners (only happens once globally)\n    registerWebVitalsListeners();\n\n    // Cleanup function\n    return () => {\n      performanceCallbacks.delete(stableCallback);\n      registeredRef.current = false;\n    };\n  }, [stableCallback]);\n};\n\nexport default usePerformanceMonitor; \n","import React, { useState, useEffect } from 'react';\nimport usePerformanceMonitor from '@hooks/usePerformanceMonitor.js';\n\nconst PerformanceStatus = () => {\n  const [metrics, setMetrics] = useState(new Map());\n\n  // Monitor performance with our custom hook (without console logging)\n  usePerformanceMonitor((metric) => {\n    setMetrics(prev => {\n      const newMetrics = new Map(prev);\n      newMetrics.set(metric.name, {\n        value: metric.value,\n        rating: metric.rating,\n        timestamp: Date.now()\n      });\n      return newMetrics;\n    });\n  });\n\n  const metricsArray = Array.from(metrics.entries()).map(([name, data]) => ({\n    name,\n    ...data\n  }));\n\n  return (\n    <div style={{ \n      background: 'rgba(255, 255, 255, 0.1)', \n      padding: '1rem', \n      borderRadius: '8px',\n      marginTop: '1rem'\n    }}>\n      <h4>ðŸš€ Web Vitals Monitor (Live)</h4>\n      {metricsArray.length === 0 ? (\n        <p>Esperando mÃ©tricas de rendimiento...</p>\n      ) : (\n        <ul style={{ textAlign: 'left', fontSize: '0.9rem' }}>\n          {metricsArray.map((metric) => (\n            <li key={metric.name}>\n              <strong>{metric.name}:</strong> {metric.value.toFixed(2)}ms\n              {metric.rating && (\n                <span style={{ \n                  marginLeft: '0.5rem',\n                  padding: '0.2rem 0.4rem',\n                  borderRadius: '4px',\n                  fontSize: '0.8rem',\n                  backgroundColor: metric.rating === 'good' ? '#22c55e' : \n                                  metric.rating === 'needs-improvement' ? '#f59e0b' : '#ef4444',\n                  color: 'white'\n                }}>\n                  {metric.rating}\n                </span>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n      <p style={{ fontSize: '0.8rem', opacity: 0.8, marginTop: '0.5rem' }}>\n        âœ… Web Vitals 4.2.4 - Sin duplicaciones | MÃ©tricas Ãºnicas: {metricsArray.length}\n      </p>\n    </div>\n  );\n};\n\nexport default React.memo(PerformanceStatus); \n"],"names":["listenersRegistered","performanceCallbacks","registerWebVitalsListeners","reportWebVital","metric","callback","error","onCLS","onFID","onFCP","onLCP","onTTFB","usePerformanceMonitor","onPerfEntry","callbackRef","useRef","registeredRef","useEffect","stableCallback","useCallback","PerformanceStatus","metrics","setMetrics","useState","prev","newMetrics","metricsArray","name","data","jsxDEV","this","PerformanceStatus$1","React"],"mappings":"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"}